<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kookyungmin.waops" />
	
	<!-- aop 자동적인 Proxy 객체 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 파일 업로드로 들어오는 데이터를 처리하는 객체 -->
	<beans:bean id="multipartResolver"   
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 10MB 로 제한 -->
    	<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	<!-- 톰캣 안에 저장 -->
	<beans:bean id="uploadPath" 
         class="java.lang.String">
         <!-- upload 폴더 위치 -->
    	<beans:constructor-arg value="C:\\Users\\rudal\\Documents\\workspace-sts-3.9.5.RELEASE\\uploads"></beans:constructor-arg>
	</beans:bean>
	<!-- 아파치에 저장 -->
	<beans:bean id="uploadDirectPath" 
         class="java.lang.String">
         <!-- upload 폴더 위치 -->
    	<beans:constructor-arg value="C:\\Apache24\\htdocs\\uploads"></beans:constructor-arg>
	</beans:bean>
	<!-- websocket handler -->
	<beans:bean id="sixthFingerHandler" class="com.kookyungmin.waops.handler.SixthFingerHandler" />
	
	<!-- 세션을 사용하기 위해서 -->
	<websocket:handlers>
		<websocket:mapping handler="sixthFingerHandler"
			path="/CommunicationToArduino" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	<!-- 인터셉터 -->
	<beans:bean id="loginInterceptor" class="com.kookyungmin.waops.interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="AuthInterceptor" class="com.kookyungmin.waops.interceptor.AuthInterceptor"></beans:bean>
	<interceptors>
	   <interceptor>
	       <mapping path="/loginPost"></mapping>
	       <beans:ref bean="loginInterceptor" />
	   </interceptor>
	</interceptors>
	<interceptors>
	   <interceptor>
	       <mapping path="/displayFile"></mapping>
	       <mapping path="/timelines"></mapping>
	       <mapping path="/deleteFile"></mapping>
	   	   <mapping path="/getAttach"></mapping>
	   	   <mapping path="/uploadAjax"></mapping>
	       <mapping path="/questions/*"></mapping>
	       <mapping path="/replies/*"></mapping>
	       <beans:ref bean="AuthInterceptor" />
	   </interceptor>
	</interceptors>
	<!-- oauth2 login 네이버 -->
	<beans:bean id="naverClientID" class="java.lang.String">
	<beans:constructor-arg value="eoOSfrr8TL4SXD2VT9R4" />
	</beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg
			value="DIV1jOTAwd" />
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="http://www.waops.cf/auth/naver/callback" />
	</beans:bean>

	<beans:bean id="naverSns" class="com.kookyungmin.waops.auth.SnsValue">
		<beans:constructor-arg value="naver" />
		<beans:constructor-arg ref="naverClientID" />
		<beans:constructor-arg ref="naverClientSecret" />
		<beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
	
	<!-- oauth2 login google -->
	
	<beans:bean id="googleClientID" class="java.lang.String">
		<beans:constructor-arg value="909282134420-1n92tkgbf5fhnugdolcplep1ggdbi8ph.apps.googleusercontent.com" />
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
		<beans:constructor-arg
			value="zlMpLk6cBKdtSzx7zugLJP_s" />
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="http://www.waops.cf/auth/google/callback" />
	</beans:bean>
	<beans:bean id="googleSns" class="com.kookyungmin.waops.auth.SnsValue">
		<beans:constructor-arg value="google" />
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
		<beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
	</beans:bean>
	<beans:bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		 
		<beans:property name="scope"
			value="https://www.googleapis.com/auth/userinfo.email" />  
		<!-- <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" /> 	
		 -->
		<beans:property name="redirectUri"
			ref="googleRedirectUrl" />
	</beans:bean>
</beans:beans>
